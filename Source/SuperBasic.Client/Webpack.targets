<Project>

  <PropertyGroup>
    <TypeScriptToolsVersion>3.0</TypeScriptToolsVersion>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <ContentRootPath>$(RootDirectory)\Source\SuperBasic.Editor\wwwroot</ContentRootPath>
  </PropertyGroup>

  <Target Name="WebPackRestore">
    <PropertyGroup>
      <OriginalLockFile>package-lock.json</OriginalLockFile>
      <LastRestoreLockFile>obj\package-lock.json</LastRestoreLockFile>
    </PropertyGroup>

    <PropertyGroup>
      <AlreadyUpdated Condition="$([System.IO.File]::Exists($(LastRestoreLockFile))) and $([System.IO.File]::ReadAllText($(OriginalLockFile))) == $([System.IO.File]::ReadAllText($(LastRestoreLockFile)))">True</AlreadyUpdated>
    </PropertyGroup>

    <Message Condition="'$(AlreadyUpdated)' == 'True'" Importance="high" Text="All npm packages already exist for project $(MSBuildProjectName)" />

    <Message Condition="'$(AlreadyUpdated)' != 'True'" Importance="high" Text="Restoring npm packages for project $(MSBuildProjectName)" />
    <Exec Condition="'$(AlreadyUpdated)' != 'True'" Command="npm update --silent" WorkingDirectory="$(MSBuildProjectDirectory)" />
    <Copy Condition="'$(AlreadyUpdated)' != 'True'" SourceFiles="$(OriginalLockFile)" DestinationFiles="$(LastRestoreLockFile)" />
  </Target>

  <Target Name="WebPackClientSide" AfterTargets="Build" DependsOnTargets="WebPackRestore">
    <Message Importance="high" Text="Running Webpack for client side" />

    <ItemGroup>
      <ClientWebPackArgs Include="config" Value="webpack.config.ts" />
      <ClientWebPackArgs Include="env.configuration" Value="$(Configuration)" />
      <ClientWebPackArgs Include="env.outputFile" Value="$(ContentRootPath)\SmallBasic.Interop.js" />
      <ClientWebPackArgs Include="env.target" Condition="'$(IsBuildingForDesktop)' == 'True'" Value="electron-renderer" />
      <ClientWebPackArgs Include="env.target" Condition="'$(IsBuildingForDesktop)' != 'True'" Value="web" />
      <ClientWebPackArgs Include="display-error-details" />
    </ItemGroup>

    <Exec Command="node $(MSBuildProjectDirectory)\node_modules\webpack\bin\webpack.js @(ClientWebPackArgs->'--%(Identity) %(Value)', ' ')" WorkingDirectory="$(MSBuildProjectDirectory)" />
  </Target>

  <Target Name="WebPackElectron" AfterTargets="WebPackClientSide" Condition="'$(IsBuildingForDesktop)' == 'True'">
    <Message Importance="high" Text="Running Webpack for electron" />

    <ItemGroup>
      <ElectronWebPackArgs Include="config" Value="webpack.config.ts" />
      <ElectronWebPackArgs Include="env.configuration" Value="$(Configuration)" />
      <ElectronWebPackArgs Include="env.outputFile" Value="$(ContentRootPath)\SmallBasic.Electron.js" />
      <ElectronWebPackArgs Include="env.target" Value="electron-main" />
      <ElectronWebPackArgs Include="display-error-details" />
    </ItemGroup>

    <Exec Command="node $(MSBuildProjectDirectory)\node_modules\webpack\bin\webpack.js @(ElectronWebPackArgs->'--%(Identity) %(Value)', ' ')" WorkingDirectory="$(MSBuildProjectDirectory)" />
  </Target>

</Project>