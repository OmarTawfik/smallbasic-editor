<Project>

  <PropertyGroup>
    <TypeScriptToolsVersion>3.0</TypeScriptToolsVersion>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
  </PropertyGroup>

  <Target Name="WebPackRestore">
    <PropertyGroup>
      <OriginalLockFile>$(MSBuildProjectDirectory)\package-lock.json</OriginalLockFile>
      <LastRestoreLockFile>$(MSBuildProjectDirectory)\obj\package-lock.json</LastRestoreLockFile>
    </PropertyGroup>

    <PropertyGroup>
      <AlreadyUpdated Condition="
        $([System.IO.File]::Exists($(LastRestoreLockFile)))
        and
        $([System.IO.File]::ReadAllText($(OriginalLockFile))) == $([System.IO.File]::ReadAllText($(LastRestoreLockFile)))
        ">True</AlreadyUpdated>
    </PropertyGroup>

    <Message Condition="'$(AlreadyUpdated)' == 'True'" Importance="high" Text="All npm packages already exist for project $(MSBuildProjectName)" />

    <Message Condition="'$(AlreadyUpdated)' != 'True'" Importance="high" Text="Restoring npm packages for project $(MSBuildProjectName)" />
    <Exec Condition="'$(AlreadyUpdated)' != 'True'" Command="npm update --silent" WorkingDirectory="$(MSBuildProjectDirectory)" />
    <Copy Condition="'$(AlreadyUpdated)' != 'True'" SourceFiles="$(OriginalLockFile)" DestinationFiles="$(LastRestoreLockFile)" />
  </Target>

  <Target Name="WebPackBuild" AfterTargets="Build" DependsOnTargets="WebPackRestore">
    <ItemGroup>
      <WebPackArgs Include="config" Value="$(MSBuildProjectDirectory)\webpack.config.ts" />
      <WebPackArgs Include="env.configuration" Value="$(Configuration)" />
      <WebPackArgs Include="env.inputFile" Value="$([System.IO.Path]::GetFullPath('$(MSBuildProjectDirectory)\entry.ts'))" />
      <WebPackArgs Include="env.outputFile" Value="$(WebpackOutputPath)" />
      <WebPackArgs Include="display-error-details" />
    </ItemGroup>

    <Message Importance="high" Text="Running Webpack for $(MSBuildProjectName)" />
    <Exec Command="node $(MSBuildProjectDirectory)\node_modules\webpack\bin\webpack.js @(WebPackArgs->'--%(Identity) %(Value)', ' ')" WorkingDirectory="$(MSBuildProjectDirectory)" />
  </Target>

</Project>
