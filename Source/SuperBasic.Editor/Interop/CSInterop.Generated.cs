// <copyright file="CSInterop.Generated.cs" company="2018 Omar Tawfik">
// Copyright (c) 2018 Omar Tawfik. All rights reserved. Licensed under the MIT License. See LICENSE file in the project root for license information.
// </copyright>

/// <summary>
/// This file is auto-generated by a build task. It shouldn't be edited by hand.
/// </summary>
namespace SuperBasic.Editor.Interop
{
    using System.Threading.Tasks;
    using Microsoft.JSInterop;
    using SuperBasic.Compiler.Services;

    internal interface IMonacoInterop
    {
        Task<MonacoRange[]> UpdateDiagnostics(string code);

        Task<MonacoCompletionItem[]> ProvideCompletionItems(string code, MonacoPosition position);

        Task<string[]> ProvideHover(string code, MonacoPosition position);
    }

    public static class CSInterop
    {
        private static readonly IMonacoInterop Monaco = new MonacoInterop();

        [JSInvokable("CSIntrop.Monaco.UpdateDiagnostics")]
        public static async Task<MonacoRange[]> Monaco_UpdateDiagnostics(string code)
        {
            return await Monaco.UpdateDiagnostics(code);
        }

        [JSInvokable("CSIntrop.Monaco.ProvideCompletionItems")]
        public static async Task<MonacoCompletionItem[]> Monaco_ProvideCompletionItems(string code, MonacoPosition position)
        {
            return await Monaco.ProvideCompletionItems(code, position);
        }

        [JSInvokable("CSIntrop.Monaco.ProvideHover")]
        public static async Task<string[]> Monaco_ProvideHover(string code, MonacoPosition position)
        {
            return await Monaco.ProvideHover(code, position);
        }
    }
}
