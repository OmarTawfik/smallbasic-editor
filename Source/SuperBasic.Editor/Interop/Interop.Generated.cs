// <copyright file="Interop.Generated.cs" company="2018 Omar Tawfik">
// Copyright (c) 2018 Omar Tawfik. All rights reserved. Licensed under the MIT License. See LICENSE file in the project root for license information.
// </copyright>

/// <summary>
/// This file is auto-generated by a build task. It shouldn't be edited by hand.
/// </summary>
namespace SuperBasic.Editor
{
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.JSInterop;

    internal static class Interop
    {
        public static class JS
        {
            public static async Task InitializeWebView(string locale, string title)
            {
                await JSRuntime.Current.InvokeAsync<bool>("Interop.JS.initializeWebView", locale, title);
            }

            public static async Task OpenExternalLink(string url)
            {
                await JSRuntime.Current.InvokeAsync<bool>("Interop.JS.openExternalLink", url);
            }

            public static async Task AttachSideBarEvents(ElementRef upButton, ElementRef scrollContentsArea, ElementRef downButton)
            {
                await JSRuntime.Current.InvokeAsync<bool>("Interop.JS.attachSideBarEvents", upButton, scrollContentsArea, downButton);
            }
        }

        public static class Monaco
        {
            public static async Task Initialize(ElementRef editorElement, string initialValue, bool isReadOnly)
            {
                await JSRuntime.Current.InvokeAsync<bool>("Interop.Monaco.initialize", editorElement, initialValue, isReadOnly);
            }
        }
    }
}
